name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    paths: 
      - 'docker/**'
    branches: [ "fb/workflow" ]
    # Publish semver tags as releases.
  pull_request:
    branches: [ "fb/workflow" ]

env:
  IMAGE_NAME: ${{ github.repository }}:test
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      pull-requests: write
      repository-projects: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
      #   with:
      #     cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0


      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          load: true
          context: ./docker
          file: ./docker/Dockerfile
          tags: ${{ env.IMAGE_NAME }} 

      - name: Run Docker Image
        id: run
        run: |
              algover=$(docker run --rm ${{ env.IMAGE_NAME }} /bin/bash -c "
              /algorand/node/algod -v | head -n 2 | tail -n 1 | cut -d ' ' -f 1")
              echo "version=$algover" > "$GITHUB_OUTPUT"
      
      
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./docker
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: | 
            ghcr.io/mortega89/algonfollownode:ubuntu2204-${{ steps.run.outputs.version }}
            ghcr.io/mortega89/algonfollownode:stable
            ghcr.io/mortega89/algonfollownode:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      #     TAGS: |
      #          ghcr.io/mortega89/algonfollownode:${{ steps.run.outputs.version }}
      #          ghcr.io/mortega89/algonfollownode:stable
      #          ghcr.io/mortega89/algonfollownode:latest         
      #     DIGEST: ${{ steps.build-and-push.outputs.digest }}
      #   # This step uses the identity token to provision an ephemeral certificate
      #   # against the sigstore community Fulcio instance.
      #   run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # - name: Configure Git
      #   run: |
      #     git config user.name "$GITHUB_ACTOR"
      #     git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          