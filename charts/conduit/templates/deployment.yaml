apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "conduit.fullname" . }}
  labels:
    {{- include "conduit.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "conduit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "conduit.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      initContainers:
        - name: add-conf
          image: bitnami/kubectl:1.32.0-debian-12-r0
          # command: ["sh", "-c", "cp /conduit_def.yml /data/conduit.yml"]
          command:
              - /bin/sh
          args:
              - -c
              - |
                cp /conduit_def.yml /data/conduit.yml
                export ALGOD_ADMIN_TOKEN=$(kubectl get secret -n ns-algon algon-api-token -o yaml | yq '.data["algod.admin.token"]' | base64 -d)
                export ALGOD_TOKEN=$(kubectl get secret -n ns-algon algon-api-token -o yaml | yq '.data["algod.token"]' | base64 -d)
                yq eval '.importer.config["token"] = env(ALGOD_TOKEN)' -i /data/conduit.yml
                yq eval '.importer.config.catchup-config["admin-token"] = env(ALGOD_ADMIN_TOKEN)' -i /data/conduit.yml
                cat /data/conduit.yml
          volumeMounts:
          - mountPath: /conduit_def.yml
            subPath: conduit_def.yml
            name: config-volume
          - mountPath: /data/
            name: data-volume
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "conduit.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
